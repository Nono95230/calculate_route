<?php

/** @file ...*/

/**
 * Implements hook_schema().
 */





/*

function calculate_route_schema(){
	
	$schema['cr_config_map'] = array(
	  'description' => 'This table is used to store param for the map',
	  'fields' => array(
	    'crid'       	=> array(
	    					'type' => 'serial',
	    					'unsigned' => TRUE,
	    					'not null' => TRUE
	    				),
	    'map_type'		=> array(
	    					'type' => 'char',
	    					'not null' => TRUE
	    				),
	    'latitude'      => array(
	    					'type' => 'float', 
	    					'not null' => TRUE
	    				),
	    'longitude'     => array(
	    					'type' => 'float', 
	    					'not null' => TRUE
	    				),
	    'zoom'			=> array(
	    					'type' => 'int',
	    					'not null' => TRUE
	    				),
	    'zoom_max'		=> array(
	    					'type' => 'int',
	    					'unsigned' => TRUE,
	    					'not null' => TRUE
	    				),
	    'zoom_scroll'	=> array(
	    					'type' => 'int',
	    					'unsigned' => TRUE,
	    					'not null' => TRUE
	    				),
	    'update_time'	=> array(
	    					'type' => 'int',
	    					'not null' => TRUE
	    				),
	  ),
	  //'indexes' => array(),
	  //'unique keys' => array(),
	  //'foreign keys' => array(),
	  'primary key' => array('crid'),
	);

	$schema['cr_config_marker'] = array(
	  'description' => 'This table is used to store param for the marker',
	  'fields' => array(
	    'crid'       	=> array(
	    					'type' => 'serial',
	    					'unsigned' => TRUE,
	    					'not null' => TRUE
	    				),
	  ),
	  'primary key' => array('crid'),
	);

	$schema['cr_route_calculation'] = array(
	  'description' => 'This table is used to store param for the route calculation',
	  'fields' => array(
	    'crid'       	=> array(
	    					'type' => 'serial',
	    					'unsigned' => TRUE,
	    					'not null' => TRUE
	    				),
	  ),
	  'primary key' => array('crid'),
	);

	$schema['cr_config_appearence'] = array(
	  'description' => 'This table is used to store param for the appearence',
	  'fields' => array(
	    'crid'       	=> array(
	    					'type' => 'serial',
	    					'unsigned' => TRUE,
	    					'not null' => TRUE
	    				),
	  ),
	  'primary key' => array('crid'),
	);

	return $schema;

}
*/


/*function calculate_route_install(){


}*/
/*
function calculate_route_uninstall(){

	\Drupal::config("calculate_route.config")->clear('api_key');
	\Drupal::config("calculate_route.config")->clear('map');
	\Drupal::config("calculate_route.config")->clear('marker');
	\Drupal::config("calculate_route.config")->clear('form');
	\Drupal::config("calculate_route.config")->clear('appearence');

}
*/